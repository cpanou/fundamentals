package com.company.eshop.order;


import com.company.eshop.orderproducts.OrderProduct;
import com.company.eshop.product.Product;
import com.company.eshop.user.User;
import com.fasterxml.jackson.annotation.JsonBackReference;
import lombok.*;
import org.hibernate.annotations.CreationTimestamp;

import javax.persistence.*;
import java.time.LocalDateTime;
import java.util.List;

@Getter
@Setter
@Builder
@AllArgsConstructor
@NoArgsConstructor
//Marks this class as an Entity
@Entity
@Table(name = "orders")
public class Order {
    //Specifies the attribute as the ID of the table
    @Id
    //Specifies the attribute will be generated by the persistence layer
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @Enumerated(EnumType.STRING)
    private OrderStatus status;

    @CreationTimestamp
    private LocalDateTime submittedDate;

    private LocalDateTime processedDate;

    @ManyToOne
    //Specifies the name of the column containing the foreign Key. (User Entity Primary Key)
    //The Many side of this relationship (Order class) is the owning side since it has the user id as a foreign key
    //the mappedBy attribute In the User Class specifies the User entity as the inverse side in the User --> Order relationship
    //
    @JoinColumn(name = "user_id", nullable = false)
    private User user;

    @OneToMany(mappedBy = "order")
    @JsonBackReference
//    @JoinTable(
//            //Translates the ManyToMany relationship with the Product entity into a new Table
//            name = "order_products",    //The Name of the Table
//            joinColumns = @JoinColumn(name = "order_id", referencedColumnName = "id", nullable = false), //The foreign Key from the Order class
//            inverseJoinColumns = @JoinColumn(name = "product_id", referencedColumnName = "id", nullable = false))//The foreign Key from the Product class
    private List<OrderProduct> orderProducts;

    @Transient
    private List<Product> products;

}
